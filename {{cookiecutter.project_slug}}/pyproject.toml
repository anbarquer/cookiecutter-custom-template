[tool.poetry]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.github_username}} <{{cookiecutter.email}}>"]
readme = "README.md"
license = "{{cookiecutter.open_source_license}}"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
pydantic = {extras = ["email"], version = "^1.10.13"}
httpx = "^0.25.2"
uvicorn = "^0.24.0.post1"
{% if cookiecutter.use_celery|lower == 'yes' %}celery = {extras = ["redis"], version = "^5.3.6"}{% endif %}

[tool.poetry.group.dev.dependencies]
bump2version = "^1.0.1"
flake8 = "^6.1.0"
pytest = "^7.2.2"
pytest-asyncio = "^0.23.2"
pytest-cov = "^4.1.0"
coverage = "^7.3.2"
{% if cookiecutter.command_line_interface|lower == 'typer' %}typer = "^0.7.0"{% endif %}
{% if cookiecutter.use_celery|lower == 'yes' %}flower = "^2.0.1"{% endif %}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-p no:warnings"

[tool.coverage.report]
fail_under = 70
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
omit = [
    "*tests*",
    "*__init__*",
]
